name: Swift

on:
  push:
    branches: [ "main" ]

jobs:
    buildiOS: #name of the job
        name: Upload iOS Application # Job Name
        runs-on: macos-latest # runs on remote mac. To run in local machine set up in the repo > Settings > Actions > Runner > Add New runner.
        steps:
          - uses: actions/checkout@v1
          - name: Force Xcode 13.3.1
            run: sudo xcode-select -switch /Applications/Xcode.app
      

          - name: "Install Dependencies"
            run: pod install
      
          - name: Run tests
            run: xcodebuild clean build -workspace "CICDDemo.xcworkspace" -scheme "CICDDemo" -destination "platform=iOS Simulator,name=iPhone 13 Pro,OS=latest"
          - name: Build App
            run: xcodebuild -workspace "CICDDemo.xcworkspace" -scheme "CICDDemo" -destination "generic/platform=iOS" -configuration Release build CODE_SIGNING_ALLOWED=NO

              
            # creates keychain and
          - name: "Install the Apple certificate and provisioning profile"
            env:
                BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
                P12_PASSWORD: ${{ secrets.IOS_KEYS }}
                BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROD_PROVISION_PROFILE_BASE64 }}
                KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
            run: |
                CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
                PP_PATH=$RUNNER_TEMP/unimoon_dev.mobileprovision
                KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

                echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
                echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

                security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
                security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
                security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH

                security import $CERTIFICATE_PATH -P $P12_PASSWORD -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
                security list-keychain -d user -s $KEYCHAIN_PATH
                
                mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
                echo "List Profiles"
                ls ~/Library/MobileDevice/Provisioning\ Profiles
                echo "Move Profiles"
                cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
                echo "List Profiles"
                ls ~/Library/MobileDevice/Provisioning\ Profiles
                cp ./.github/secrets/uMoon_Development.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/uMoon_Development_profile.mobileprovision
                echo "List Profiles"
                ls ~/Library/MobileDevice/Provisioning\ Profiles
       
          
              # archives the application. Inputs are provided like scheme, configuration, archive path. Creates .xcarchive
          - name: "Build archive"
            run: |
                xcodebuild -workspace CICDDemo.xcworkspace \
                -allowProvisioningUpdates \
                -scheme CICDDemo \
                -configuration AppStore \
                -archivePath ../builds/CICDDemo.xcarchive \
                clean archive
                
            # exports the application and creates an .ipa. exportOptionsPlist contains the properties needed for uploading ipa
          - name: "Export Archive"
            run: |
                xcodebuild -exportArchive \
                -allowProvisioningUpdates \
                -archivePath ../builds/CICDDemo.xcarchive \
                -exportOptionsPlist CICDDemo/Info.plist \
                -exportPath build/ipa 
